import 'package:flutter/material.dart';
import 'package:pr/models/database.dart.temp';
import 'package:pr/models/group_isar.dart';
import 'package:pr/models/workouts_isar.dart';
import 'package:pr/theme/theme.dart';

class WorkoutSession extends StatefulWidget {
  final List list;
  const WorkoutSession({
    super.key,
    required this.list,
  });

  @override
  State<WorkoutSession> createState() => _WorkoutSessionState();
}

class _WorkoutSessionState extends State<WorkoutSession> {
  int count = 0;
  TextEditingController weightController = TextEditingController();
  TextEditingController repsController = TextEditingController();
  TextEditingController bodyweightController = TextEditingController();
  TextEditingController distanceController = TextEditingController();
  TextEditingController timeController = TextEditingController();

  Future<MuscleGroup> fetchGroup(int index) async {
    final MuscleGroup group = await Database().fetchGroup(widget.list[index]);
    return group;
  }

  Future<WorkoutDetail> fetchWorkout(int index) async {
    final WorkoutDetail workouts =
        await Database().fetchWorkouts(widget.list[index]);
    return workouts;
  }

  fetchCount() async {
    int get = await Database().getCount();
    setState(() {
      count = get;
    });
  }

  newSet(String workoutName) {
    bool weights = true;
    bool performance = false;
    showDialog(
      barrierDismissible: false,
      context: context,
      builder: (context) => AlertDialog(
        contentPadding: const EdgeInsets.only(left: 10, right: 10),
        titlePadding: const EdgeInsets.only(top: 15, left: 15),
        actionsPadding: const EdgeInsets.all(10),
        backgroundColor: darkMode.colorScheme.secondary,
        title: const Text(
          "New Set",
          style: TextStyle(
            color: Colors.white,
          ),
        ),
        content: StatefulBuilder(
          builder: (context, setState) => IntrinsicHeight(
            child: Column(
              children: [
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    const Text(
                      "Weights",
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 15,
                      ),
                    ),
                    Checkbox(
                      value: weights,
                      onChanged: (value) {
                        setState(() {
                          weights = !weights;
                        });
                      },
                    ),
                  ],
                ),
                Row(
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    const Text(
                      "Performance",
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 15,
                      ),
                    ),
                    Checkbox(
                      value: performance,
                      onChanged: (value) {
                        setState(() {
                          performance = !performance;
                        });
                      },
                    ),
                  ],
                ),
                Container(
                  decoration: BoxDecoration(
                    color: Colors.black,
                    borderRadius: BorderRadius.circular(10),
                  ),
                  padding:
                      const EdgeInsets.only(bottom: 10, right: 10, left: 10),
                  child: Column(
                    children: [
                      Visibility(
                        visible: weights,
                        child: Column(
                          children: [
                            Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                const Text(
                                  "Weight (kg):",
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 15,
                                  ),
                                ),
                                SizedBox(
                                  width: 70,
                                  child: TextField(
                                    controller: weightController,
                                    keyboardType: TextInputType.number,
                                    textAlign: TextAlign.center,
                                    style: const TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.w500,
                                      fontSize: 18,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                const Text(
                                  "Reps:",
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 15,
                                  ),
                                ),
                                SizedBox(
                                  width: 70,
                                  child: TextField(
                                    controller: repsController,
                                    keyboardType: TextInputType.number,
                                    textAlign: TextAlign.center,
                                    style: const TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.w500,
                                      fontSize: 18,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                const Text(
                                  "Bodyweight (kg):",
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 15,
                                  ),
                                ),
                                SizedBox(
                                  width: 70,
                                  child: TextField(
                                    controller: bodyweightController,
                                    keyboardType: TextInputType.number,
                                    textAlign: TextAlign.center,
                                    style: const TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.w500,
                                      fontSize: 18,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                      Visibility(
                        visible: performance,
                        child: Column(
                          children: [
                            Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                const Text(
                                  "Distance (m):",
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 15,
                                  ),
                                ),
                                SizedBox(
                                  width: 70,
                                  child: TextField(
                                    controller: distanceController,
                                    keyboardType: TextInputType.number,
                                    textAlign: TextAlign.center,
                                    style: const TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.w500,
                                      fontSize: 18,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                            Row(
                              mainAxisAlignment: MainAxisAlignment.spaceBetween,
                              children: [
                                const Text(
                                  "Time (ms):",
                                  style: TextStyle(
                                    color: Colors.white,
                                    fontSize: 15,
                                  ),
                                ),
                                SizedBox(
                                  width: 70,
                                  child: TextField(
                                    controller: timeController,
                                    keyboardType: TextInputType.number,
                                    textAlign: TextAlign.center,
                                    style: const TextStyle(
                                      color: Colors.white,
                                      fontWeight: FontWeight.w500,
                                      fontSize: 18,
                                    ),
                                  ),
                                ),
                              ],
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        ),
        actions: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              TextButton(
                onPressed: () {
                  weightController.clear();
                  repsController.clear();
                  bodyweightController.clear();
                  distanceController.clear();
                  timeController.clear();
                  Navigator.pop(context);
                },
                child: const Text(
                  "CANCEL",
                  style: TextStyle(
                    color: Colors.white,
                  ),
                ),
              ),
              TextButton(
                onPressed: () async {
                  await Database().addWorkoutData(
                    workoutName,
                    double.parse(weightController.text),
                    int.parse(repsController.text),
                    double.parse(bodyweightController.text),
                    double.parse(distanceController.text),
                    int.parse(timeController.text),
                  );
                  Navigator.pop(context);
                },
                child: const Text(
                  "ADD",
                  style: TextStyle(
                    color: Colors.white,
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: darkMode.colorScheme.surface,
      //backgroundColor: Colors.white,
      body: Column(
        children: [
          Container(
            width: double.infinity,
            decoration: const BoxDecoration(
              border: Border(
                bottom: BorderSide(
                  width: 2,
                  color: Colors.white,
                  //color: Colors.black,
                ),
              ),
            ),
            child: const Padding(
              padding: EdgeInsets.only(left: 15),
              child: Text(
                "00:00",
                style: TextStyle(
                  color: Colors.white,
                  //color: Colors.black,
                  fontSize: 80,
                  fontWeight: FontWeight.w800,
                ),
              ),
            ),
          ),
          Expanded(
            child: ListView.builder(
              itemCount: widget.list.length,
              itemBuilder: (context, index) {
                return FutureBuilder(
                  future: fetchGroup(index),
                  builder: (context, snapshot) {
                    if (snapshot.connectionState == ConnectionState.waiting) {
                      return const CircularProgressIndicator();
                    } else if (snapshot.hasError) {
                      return Text("Error: ${snapshot.error}");
                    } else {
                      MuscleGroup? group = snapshot.data;
                      return Padding(
                        padding:
                            const EdgeInsets.only(left: 8, right: 8, top: 8),
                        child: Container(
                          decoration: BoxDecoration(
                            color: Color(group?.color ?? 4294967295)
                                .withOpacity(0.7),
                            borderRadius: BorderRadius.circular(10),
                          ),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Padding(
                                padding: const EdgeInsets.only(left: 7),
                                child: Text(
                                  group?.text ?? "Failed fetch.",
                                  style: const TextStyle(
                                    color: Colors.white,
                                    fontSize: 45,
                                    fontWeight: FontWeight.bold,
                                  ),
                                ),
                              ),
                              FutureBuilder(
                                future: fetchWorkout(index),
                                builder: (context, snapshot) {
                                  if (snapshot.connectionState ==
                                      ConnectionState.waiting) {
                                    return const CircularProgressIndicator();
                                  } else if (snapshot.hasError) {
                                    return Text("Error: ${snapshot.error}");
                                  } else {
                                    WorkoutDetail? workouts = snapshot.data;
                                    return Padding(
                                      padding: const EdgeInsets.only(
                                          left: 10, right: 10),
                                      child: Column(
                                        crossAxisAlignment:
                                            CrossAxisAlignment.start,
                                        children: List.generate(
                                          workouts?.workouts.length ?? 0,
                                          (index) {
                                            bool tapped = false;
                                            return Padding(
                                              padding: const EdgeInsets.only(
                                                bottom: 8,
                                              ),
                                              child: Container(
                                                width: double.infinity,
                                                decoration: BoxDecoration(
                                                  color: const Color.fromARGB(
                                                      255, 60, 60, 60),
                                                  borderRadius:
                                                      BorderRadius.circular(10),
                                                ),
                                                child: Padding(
                                                  padding:
                                                      const EdgeInsets.all(8.0),
                                                  child: StatefulBuilder(
                                                    builder:
                                                        (context, setState) =>
                                                            Column(
                                                      children: [
                                                        GestureDetector(
                                                          onTap: () {
                                                            setState(() {
                                                              tapped = !tapped;
                                                            });
                                                          },
                                                          child: Row(
                                                            // mainAxisAlignment:
                                                            //     MainAxisAlignment
                                                            //         .spaceBetween,
                                                            children: [
                                                              Expanded(
                                                                child: Text(
                                                                  workouts?.workouts[
                                                                          index] ??
                                                                      "Failed fetch.",
                                                                  style:
                                                                      const TextStyle(
                                                                    color: Colors
                                                                        .white,
                                                                    fontSize:
                                                                        20,
                                                                    fontWeight:
                                                                        FontWeight
                                                                            .w600,
                                                                  ),
                                                                ),
                                                              ),
                                                              const Icon(
                                                                Icons
                                                                    .keyboard_arrow_down_outlined,
                                                                color: Colors
                                                                    .white,
                                                              ),
                                                            ],
                                                          ),
                                                        ),
                                                        Visibility(
                                                          visible: tapped,
                                                          child: Column(
                                                            children: [
                                                              Padding(
                                                                padding:
                                                                    const EdgeInsets
                                                                        .only(
                                                                  bottom: 5,
                                                                ),
                                                                child: Column(
                                                                  children: List
                                                                      .generate(
                                                                    count,
                                                                    (index) {
                                                                      return SizedBox(
                                                                        height:
                                                                            20,
                                                                        child:
                                                                            Container(
                                                                          color:
                                                                              Colors.white,
                                                                        ),
                                                                      );
                                                                    },
                                                                  )
                                                                  //have the list on top
                                                                  //have the button on the bottom
                                                                  ,
                                                                ),
                                                              ),
                                                              TextButton(
                                                                  style:
                                                                      ButtonStyle(
                                                                    padding:
                                                                        const WidgetStatePropertyAll(
                                                                      EdgeInsets
                                                                          .all(
                                                                        11,
                                                                      ),
                                                                    ),
                                                                    shape:
                                                                        WidgetStatePropertyAll(
                                                                      RoundedRectangleBorder(
                                                                        side:
                                                                            const BorderSide(
                                                                          width:
                                                                              1,
                                                                          color:
                                                                              Colors.white,
                                                                        ),
                                                                        borderRadius:
                                                                            BorderRadius.circular(10),
                                                                      ),
                                                                    ),
                                                                  ),
                                                                  onPressed:
                                                                      () {
                                                                    newSet(workouts
                                                                            ?.workouts[index] ??
                                                                        "failed assignment");
                                                                  },
                                                                  child:
                                                                      const Row(
                                                                    mainAxisAlignment:
                                                                        MainAxisAlignment
                                                                            .spaceBetween,
                                                                    children: [
                                                                      Text(
                                                                        "Add new set",
                                                                        style:
                                                                            TextStyle(
                                                                          color:
                                                                              Colors.white,
                                                                          fontSize:
                                                                              15,
                                                                        ),
                                                                      ),
                                                                      Icon(
                                                                        Icons
                                                                            .add,
                                                                        color: Colors
                                                                            .white,
                                                                      ),
                                                                    ],
                                                                  )),
                                                            ],
                                                          ),
                                                        ),
                                                      ],
                                                    ),
                                                  ),
                                                ),
                                              ),
                                            );
                                          },
                                        ),
                                      ),
                                    );
                                  }
                                },
                              ),
                            ],
                          ),
                        ),
                      );
                    }
                  },
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}
